/* Name: bmpPalette v0.0.1
 * Date: 2021-08-22
 * Intro: Define some palette, such as gradient. Use with bmpEncoder higher than
 * v2.0.0.
 * Update: Rename PALETTE colorChecker to colorChecker25
 */
#ifndef _BMPPALETTE
#define _BMPPALETTE 0x000000

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef uint32_t* PALETTE;

uint32_t _colorChecker25[] = {
	0x000000, 
	0x735244, 0xc29682, 0x627a9d, 0x576c43, 0x8580b1, 0x67bdaa, 
	0xd67e2c, 0x505ba6, 0xc15a63, 0x5e3c6c, 0x9dbc40, 0xe0a32e, 
	0x383d96, 0x469449, 0xaf363c, 0xe7c71f, 0xbb5695, 0x0885a1, 
	0xf3f3f2, 0xc8c8c8, 0xa0a0a0, 0x7a7a79, 0x555555, 0x343434
};
PALETTE colorChecker25 = _colorChecker25;

uint32_t _gradWMBCFGYRK105[] = {
	0xffffff, 0xffeeff, 0xffddff, 0xffccff, 0xffbbff, 
	0xffaaff, 0xff99ff, 0xff88ff, 0xff77ff, 0xff66ff, 
	0xff55ff, 0xff44ff, 0xff33ff, 0xff22ff, 0xff11ff, 
	0xff00ff, 0xee00ff, 0xdd00ff, 0xcc00ff, 0xbb00ff, 
	0xaa00ff, 0x9900ff, 0x8800ff, 0x7700ff, 0x6600ff, 
	0x5500ff, 0x4400ff, 0x3300ff, 0x2200ff, 0x1100ff, 
	0x0000ff, 0x0011ff, 0x0022ff, 0x0033ff, 0x0044ff, 
	0x0055ff, 0x0066ff, 0x0077ff, 0x0088ff, 0x0099ff, 
	0x00aaff, 0x00bbff, 0x00ccff, 0x00ddff, 0x00eeff, 
	0x00ffff, 0x00ffee, 0x00ffdd, 0x00ffcc, 0x00ffbb, 
	0x00ffaa, 0x00ff99, 0x00ff88, 0x00ff77, 0x00ff66, 
	0x00ff55, 0x00ff44, 0x00ff33, 0x00ff22, 0x00ff11, 
	0x00ff00, 0x11ff00, 0x22ff00, 0x33ff00, 0x44ff00, 
	0x55ff00, 0x66ff00, 0x77ff00, 0x88ff00, 0x99ff00, 
	0xaaff00, 0xbbff00, 0xccff00, 0xddff00, 0xeeff00, 
	0xffff00, 0xffee00, 0xffdd00, 0xffcc00, 0xffbb00, 
	0xffaa00, 0xff9900, 0xff8800, 0xff7700, 0xff6600, 
	0xff5500, 0xff4400, 0xff3300, 0xff2200, 0xff1100, 
	0xff0000, 0xee0000, 0xdd0000, 0xcc0000, 0xbb0000, 
	0xaa0000, 0x990000, 0x880000, 0x770000, 0x660000, 
	0x550000, 0x440000, 0x330000, 0x220000, 0x110000, 0x000000
};
PALETTE gradWMBCFGYRK105 = _gradWMBCFGYRK105;

uint32_t _gradWMRYGCBK105[] = {
	0xffffff, 0xffeeff, 0xffddff, 0xffccff, 0xffbbff, 
	0xffaaff, 0xff99ff, 0xff88ff, 0xff77ff, 0xff66ff, 
	0xff55ff, 0xff44ff, 0xff33ff, 0xff22ff, 0xff11ff, 
	0xff00ff, 0xff00ee, 0xff00dd, 0xff00cc, 0xff00bb, 
	0xff00aa, 0xff0099, 0xff0088, 0xff0077, 0xff0066, 
	0xff0055, 0xff0044, 0xff0033, 0xff0022, 0xff0011, 
	0xff0000, 0xff1100, 0xff2200, 0xff3300, 0xff4400, 
	0xff5500, 0xff6600, 0xff7700, 0xff8800, 0xff9900, 
	0xffaa00, 0xffbb00, 0xffcc00, 0xffdd00, 0xffee00, 
	0xffff00, 0xeeff00, 0xddff00, 0xccff00, 0xbbff00, 
	0xaaff00, 0x99ff00, 0x88ff00, 0x77ff00, 0x66ff00, 
	0x55ff00, 0x44ff00, 0x33ff00, 0x22ff00, 0x11ff00, 
	0x00ff00, 0x00ff11, 0x00ff22, 0x00ff33, 0x00ff44, 
	0x00ff55, 0x00ff66, 0x00ff77, 0x00ff88, 0x00ff99, 
	0x00ffaa, 0x00ffbb, 0x00ffcc, 0x00ffdd, 0x00ffee, 
	0x00ffff, 0x00eeff, 0x00ddff, 0x00ccff, 0x00bbff, 
	0x00aaff, 0x0099ff, 0x0088ff, 0x0077ff, 0x0066ff, 
	0x0055ff, 0x0044ff, 0x0033ff, 0x0022ff, 0x0011ff, 
	0x0000ff, 0x0000ee, 0x0000dd, 0x0000cc, 0x0000bb, 
	0x0000aa, 0x000099, 0x000088, 0x000077, 0x000066, 
	0x000055, 0x000044, 0x000033, 0x000022, 0x000011, 0x000000
};
PALETTE gradWMRYGCBK105 = _gradWMRYGCBK105;

uint32_t _gradWMBCFGYRK119[] = {
	0xffffff, 0xfff0ff, 0xffe1ff, 0xffd2ff, 0xffc3ff, 0xffb4ff, 
	0xffa5ff, 0xff96ff, 0xff87ff, 0xff78ff, 0xff69ff, 0xff5aff, 
	0xff4bff, 0xff3cff, 0xff2dff, 0xff1eff, 0xff0fff, 
	0xff00ff, 0xf000ff, 0xe100ff, 0xd200ff, 0xc300ff, 0xb400ff, 
	0xa500ff, 0x9600ff, 0x8700ff, 0x7800ff, 0x6900ff, 0x5a00ff, 
	0x4b00ff, 0x3c00ff, 0x2d00ff, 0x1e00ff, 0x0f00ff, 
	0x0000ff, 0x000fff, 0x001eff, 0x002dff, 0x003cff, 0x004bff, 
	0x005aff, 0x0069ff, 0x0078ff, 0x0087ff, 0x0096ff, 0x00a5ff, 
	0x00b4ff, 0x00c3ff, 0x00d2ff, 0x00e1ff, 0x00f0ff, 
	0x00ffff, 0x00fff0, 0x00ffe1, 0x00ffd2, 0x00ffc3, 0x00ffb4, 
	0x00ffa5, 0x00ff96, 0x00ff87, 0x00ff78, 0x00ff69, 0x00ff5a, 
	0x00ff4b, 0x00ff3c, 0x00ff2d, 0x00ff1e, 0x00ff0f, 
	0x00ff00, 0x0fff00, 0x1eff00, 0x2dff00, 0x3cff00, 0x4bff00, 
	0x5aff00, 0x69ff00, 0x78ff00, 0x87ff00, 0x96ff00, 0xa5ff00, 
	0xb4ff00, 0xc3ff00, 0xd2ff00, 0xe1ff00, 0xf0ff00, 
	0xffff00, 0xfff000, 0xffe100, 0xffd200, 0xffc300, 0xffb400, 
	0xffa500, 0xff9600, 0xff8700, 0xff7800, 0xff6900, 0xff5a00, 
	0xff4b00, 0xff3c00, 0xff2d00, 0xff1e00, 0xff0f00, 
	0xff0000, 0xf00000, 0xe10000, 0xd20000, 0xc30000, 0xb40000, 
	0xa50000, 0x960000, 0x870000, 0x780000, 0x690000, 0x5a0000, 
	0x4b0000, 0x3c0000, 0x2d0000, 0x1e0000, 0x0f0000, 0x000000
};
PALETTE gradWMBCFGYRK119 = _gradWMBCFGYRK119;

uint32_t _gradWMRYGCBK119[] = {
	0xffffff, 0xfff0ff, 0xffe1ff, 0xffd2ff, 0xffc3ff, 0xffb4ff, 
	0xffa5ff, 0xff96ff, 0xff87ff, 0xff78ff, 0xff69ff, 0xff5aff, 
	0xff4bff, 0xff3cff, 0xff2dff, 0xff1eff, 0xff0fff, 
	0xff00ff, 0xff00f0, 0xff00e1, 0xff00d2, 0xff00c3, 0xff00b4, 
	0xff00a5, 0xff0096, 0xff0087, 0xff0078, 0xff0069, 0xff005a, 
	0xff004b, 0xff003c, 0xff002d, 0xff001e, 0xff000f, 
	0xff0000, 0xff0f00, 0xff1e00, 0xff2d00, 0xff3c00, 0xff4b00, 
	0xff5a00, 0xff6900, 0xff7800, 0xff8700, 0xff9600, 0xffa500, 
	0xffb400, 0xffc300, 0xffd200, 0xffe100, 0xfff000, 
	0xffff00, 0xf0ff00, 0xe1ff00, 0xd2ff00, 0xc3ff00, 0xb4ff00, 
	0xa5ff00, 0x96ff00, 0x87ff00, 0x78ff00, 0x69ff00, 0x5aff00, 
	0x4bff00, 0x3cff00, 0x2dff00, 0x1eff00, 0x0fff00, 
	0x00ff00, 0x00ff0f, 0x00ff1e, 0x00ff2d, 0x00ff3c, 0x00ff4b, 
	0x00ff5a, 0x00ff69, 0x00ff78, 0x00ff87, 0x00ff96, 0x00ffa5, 
	0x00ffb4, 0x00ffc3, 0x00ffd2, 0x00ffe1, 0x00fff0, 
	0x00ffff, 0x00f0ff, 0x00e1ff, 0x00d2ff, 0x00c3ff, 0x00b4ff, 
	0x00a5ff, 0x0096ff, 0x0087ff, 0x0078ff, 0x0069ff, 0x005aff, 
	0x004bff, 0x003cff, 0x002dff, 0x001eff, 0x000fff, 
	0x0000ff, 0x0000f0, 0x0000e1, 0x0000d2, 0x0000c3, 0x0000b4, 
	0x0000a5, 0x000096, 0x000087, 0x000078, 0x000069, 0x00005a, 
	0x00004b, 0x00003c, 0x00002d, 0x00001e, 0x00000f, 0x000000
};
PALETTE gradWMRYGCBK119 = _gradWMRYGCBK119;

#ifdef __cplusplus
}
#endif

#endif
